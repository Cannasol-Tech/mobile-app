/**
 * @file firebase_options.dart
 * @author Stephen Boyett
 * @date 2025-09-06
 * @brief Firebase configuration options for all supported platforms.
 * @details Auto-generated file by FlutterFire CLI containing platform-specific
 *          Firebase configuration including API keys, project IDs, and other
 *          Firebase service settings for web, Android, iOS, macOS, and Windows.
 * @version 1.0
 * @since 1.0
 * @note File generated by FlutterFire CLI - modify with caution
 */

// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/**
 * @brief Default Firebase configuration options for all supported platforms.
 * @details Provides platform-specific Firebase configuration options including
 *          API keys, project IDs, and service settings. Auto-generated by FlutterFire CLI.
 * @since 1.0
 *
 * Example usage:
 * ```dart
 * import 'firebase_options.dart';
 * // ...
 * await Firebase.initializeApp(
 *   options: DefaultFirebaseOptions.currentPlatform,
 * );
 * ```
 */
class DefaultFirebaseOptions {
  /**
   * @brief Gets the appropriate Firebase options for the current platform.
   * @details Automatically detects the current platform and returns the
   *          corresponding Firebase configuration options.
   * @return FirebaseOptions configured for the current platform
   * @throws UnsupportedError if the platform is not supported
   * @since 1.0
   */
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  /// Firebase configuration options for web platform
  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyADeAO7Yc9u5RhMM-GvekY9QCyKVHAXfxc',
    appId: '1:681058687134:web:1479b3911a7811d7c7438f',
    messagingSenderId: '681058687134',
    projectId: 'cannasoltech',
    authDomain: 'cannasoltech.firebaseapp.com',
    databaseURL: 'https://cannasoltech-default-rtdb.firebaseio.com',
    storageBucket: 'cannasoltech.firebasestorage.app',
    measurementId: 'G-6TMV8L9NX6',
  );

  /// Firebase configuration options for Android platform
  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyAgoZEfLt5vObq2UQO1RM7x_yENvobWzRo',
    appId: '1:681058687134:android:226599577d4fa831c7438f',
    messagingSenderId: '681058687134',
    projectId: 'cannasoltech',
    databaseURL: 'https://cannasoltech-default-rtdb.firebaseio.com',
    storageBucket: 'cannasoltech.firebasestorage.app',
  );

  /// Firebase configuration options for iOS platform
  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyCOpCrx581Twp6VGsseMtQbYCurCJt8Lnk',
    appId: '1:681058687134:ios:9cf9446c3da3577dc7438f',
    messagingSenderId: '681058687134',
    projectId: 'cannasoltech',
    databaseURL: 'https://cannasoltech-default-rtdb.firebaseio.com',
    storageBucket: 'cannasoltech.firebasestorage.app',
    androidClientId: '681058687134-6f8atkd860tsnukq32m2pk3qm3nija23.apps.googleusercontent.com',
    iosClientId: '681058687134-s5l7lnk515adhmjkt9amndke3rnb2ern.apps.googleusercontent.com',
    iosBundleId: 'com.cannasol-technologies.automation',
  );

  /// Firebase configuration options for macOS platform
  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyCOpCrx581Twp6VGsseMtQbYCurCJt8Lnk',
    appId: '1:681058687134:ios:9cf9446c3da3577dc7438f',
    messagingSenderId: '681058687134',
    projectId: 'cannasoltech',
    databaseURL: 'https://cannasoltech-default-rtdb.firebaseio.com',
    storageBucket: 'cannasoltech.firebasestorage.app',
    androidClientId: '681058687134-6f8atkd860tsnukq32m2pk3qm3nija23.apps.googleusercontent.com',
    iosClientId: '681058687134-s5l7lnk515adhmjkt9amndke3rnb2ern.apps.googleusercontent.com',
    iosBundleId: 'com.cannasol-technologies.automation',
  );

  /// Firebase configuration options for Windows platform
  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'AIzaSyADeAO7Yc9u5RhMM-GvekY9QCyKVHAXfxc',
    appId: '1:681058687134:web:1479b3911a7811d7c7438f',
    messagingSenderId: '681058687134',
    projectId: 'cannasoltech',
    authDomain: 'cannasoltech.firebaseapp.com',
    databaseURL: 'https://cannasoltech-default-rtdb.firebaseio.com',
    storageBucket: 'cannasoltech.firebasestorage.app',
    measurementId: 'G-6TMV8L9NX6',
  );

}