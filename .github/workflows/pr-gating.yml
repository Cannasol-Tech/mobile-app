name: PR Gating CI Pipeline

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  checks: write
  pull-requests: write

jobs:
  pr-gating:
    name: PR Quality Gates
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Flutter Environment
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.0'
          channel: 'stable'
          cache: true
      
      - name: Verify Flutter Installation
        run: |
          flutter --version
          flutter doctor -v
      
      - name: Install Dependencies
        run: make install
        timeout-minutes: 5
      
      - name: Run Code Analysis
        run: |
          cd cannasoltech_automation
          flutter analyze --fatal-infos --fatal-warnings
      
      - name: Run Complete Test Suite
        run: make test
        timeout-minutes: 15
      
      - name: Generate Test Reports
        if: always()
        run: |
          # Create final directory for artifacts
          mkdir -p final
          
          # Generate executive report from test results
          python3 scripts/generate_executive_report.py
          
          # Generate coverage summary if coverage exists
          if [ -f cannasoltech_automation/coverage/lcov.info ]; then
            python3 scripts/generate_coverage_summary.py
          fi
          
          # Generate unit test summary
          python3 scripts/generate_unit_test_summary.py
        continue-on-error: true
      
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.run_number }}
          path: |
            final/
            cannasoltech_automation/coverage/
            cannasoltech_automation/test/reports/
          retention-days: 30
      
      - name: Quality Gate Validation
        run: |
          echo "üîç Validating quality gates..."
          
          # Check if required test artifacts exist
          if [ ! -f "final/executive-report.json" ]; then
            echo "‚ùå Missing required executive-report.json"
            exit 1
          fi
          
          # Validate test coverage if available
          if [ -f "final/coverage-summary.json" ]; then
            python3 scripts/validate_coverage.py
          fi
          
          echo "‚úÖ Quality gates passed!"
      
      - name: Comment PR with Results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            let comment = '## üß™ Test Results\n\n';
            
            try {
              if (fs.existsSync('final/executive-report.json')) {
                const report = JSON.parse(fs.readFileSync('final/executive-report.json', 'utf8'));
                comment += `### Test Summary\n`;
                comment += `- **Total Tests**: ${report.summary.total}\n`;
                comment += `- **Passed**: ${report.summary.passed} ‚úÖ\n`;
                comment += `- **Failed**: ${report.summary.failed} ${report.summary.failed > 0 ? '‚ùå' : '‚úÖ'}\n`;
                comment += `- **Skipped**: ${report.summary.skipped}\n\n`;
              }
              
              if (fs.existsSync('final/coverage-summary.json')) {
                const coverage = JSON.parse(fs.readFileSync('final/coverage-summary.json', 'utf8'));
                comment += `### Coverage Summary\n`;
                comment += `- **Lines**: ${coverage.totals.lines.pct}%\n`;
                comment += `- **Functions**: ${coverage.totals.functions.pct}%\n`;
                comment += `- **Branches**: ${coverage.totals.branches.pct}%\n\n`;
              }
              
              comment += `### Quality Gates\n`;
              comment += `${'${{ job.status }}' === 'success' ? '‚úÖ All quality gates passed!' : '‚ùå Quality gates failed - see details above'}\n`;
              
            } catch (error) {
              comment += '‚ö†Ô∏è Error reading test results\n';
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  release-artifacts:
    name: Publish Release Artifacts
    runs-on: ubuntu-latest
    needs: pr-gating
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup Flutter Environment
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.0'
          channel: 'stable'
          cache: true
      
      - name: Install Dependencies
        run: make install
      
      - name: Run Tests and Generate Artifacts
        run: |
          make test
          python3 scripts/generate_executive_report.py
          python3 scripts/generate_coverage_summary.py
          python3 scripts/generate_unit_test_summary.py
      
      - name: Create Release (for tags)
        if: startsWith(github.ref, 'refs/tags/v')
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            final/executive-report.json
            final/coverage-summary.json
            final/unit-test-summary.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload Artifacts (for main branch)
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts-${{ github.sha }}
          path: final/
          retention-days: 90
